esphome:
  project:
    name: "chriopter.hall-9"
    version: "1.0.0"  # Current version of your project

text_sensor:
  - platform: template
    name: "Firmware Status"
    id: firmware_status
    icon: "mdi:update"

  - platform: version  # Add version sensor to get current running version
    name: "ESPHome Version"
    id: esphome_version
    type: string
    hide_timestamp: true

binary_sensor:
  - platform: template
    name: "Update Available"
    id: update_available
    device_class: update

sensor:
  - platform: custom
    lambda: |-
      auto version_check = new VersionCheck();
      App.register_component(version_check);
      return {version_check};
    sensors:
      - id: check_version
        name: "Version Check"

button:
  - platform: template
    name: "Check for Updates"
    icon: "mdi:refresh"
    on_press:
      - script.execute: perform_version_check

script:
  - id: perform_version_check
    then:
      - lambda: |-
          const char* current_version = id(esphome_version).state.c_str();
          const char* repo_version = id(check_version).state;
          
          if (repo_version != nullptr) {
            if (strcmp(current_version, repo_version) != 0) {
              id(update_available).publish_state(true);
              id(firmware_status).publish_state("Update available: " + String(repo_version));
            } else {
              id(update_available).publish_state(false);
              id(firmware_status).publish_state("Up to date");
            }
          } else {
            id(firmware_status).publish_state("Failed to check version");
          }

interval:
  - interval: 24h  # Check once per day
    then:
      - script.execute: perform_version_check

# Optional: Add notifications via Home Assistant
api:
  services:
    - service: notify_update
      variables:
        version: string
      then:
        - homeassistant.service:
            service: persistent_notification.create
            data:
              title: "ESPHome Update Available"
              message: !lambda |-
                return "New version " + version + " is available for " + std::string(ESPHOME_NAME);
